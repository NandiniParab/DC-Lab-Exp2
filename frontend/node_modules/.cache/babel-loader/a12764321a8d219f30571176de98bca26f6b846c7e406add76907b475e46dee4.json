{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\DC-Lab-Exp2\\\\frontend\\\\src\\\\contexts\\\\GameContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useAuth } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameContext = /*#__PURE__*/createContext();\nexport const useGame = () => {\n  _s();\n  const context = useContext(GameContext);\n  if (!context) {\n    throw new Error(\"useGame must be used within a GameProvider\");\n  }\n  return context;\n};\n_s(useGame, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const GameProvider = ({\n  children\n}) => {\n  _s2();\n  const [gameState, setGameState] = useState({\n    gameActive: false,\n    players: [],\n    currentIt: null,\n    gameId: null,\n    tagHistory: []\n  });\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const {\n    isAuthenticated\n  } = useAuth();\n  const API_BASE_URL = \"http://localhost:5000/api\";\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchGameStatus();\n      fetchLeaderboard();\n    }\n  }, [isAuthenticated]);\n  const fetchGameStatus = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/game/status`);\n      setGameState(response.data);\n    } catch (error) {\n      console.error(\"Failed to fetch game status:\", error);\n    }\n  };\n  const fetchLeaderboard = async (timeFilter = \"all\") => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/leaderboard?timeFilter=${timeFilter}`);\n      setLeaderboard(response.data.leaderboard);\n    } catch (error) {\n      console.error(\"Failed to fetch leaderboard:\", error);\n    }\n  };\n  const startGame = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.post(`${API_BASE_URL}/game/start`);\n      await fetchGameStatus();\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Failed to start game\"\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const tagPlayer = async targetUserId => {\n    setLoading(true);\n    try {\n      const response = await axios.post(`${API_BASE_URL}/game/tag`, {\n        targetUserId\n      });\n      await fetchGameStatus();\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || \"Failed to tag player\"\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const value = {\n    gameState,\n    leaderboard,\n    loading,\n    startGame,\n    tagPlayer,\n    fetchGameStatus,\n    fetchLeaderboard\n  };\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 10\n  }, this);\n};\n_s2(GameProvider, \"QDsClEEF3h+9uWfoo8depOXWPME=\", false, function () {\n  return [useAuth];\n});\n_c = GameProvider;\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useState","useEffect","axios","useAuth","jsxDEV","_jsxDEV","GameContext","useGame","context","Error","GameProvider","children","gameState","setGameState","gameActive","players","currentIt","gameId","tagHistory","leaderboard","setLeaderboard","loading","setLoading","isAuthenticated","API_BASE_URL","fetchGameStatus","fetchLeaderboard","response","get","data","error","console","timeFilter","startGame","post","success","_error$response","_error$response$data","tagPlayer","targetUserId","_error$response2","_error$response2$data","value","Provider","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/DC-Lab-Exp2/frontend/src/contexts/GameContext.js"],"sourcesContent":["\"use client\"\n\nimport { createContext, useContext, useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport { useAuth } from \"./AuthContext\"\n\nconst GameContext = createContext()\n\nexport const useGame = () => {\n  const context = useContext(GameContext)\n  if (!context) {\n    throw new Error(\"useGame must be used within a GameProvider\")\n  }\n  return context\n}\n\nexport const GameProvider = ({ children }) => {\n  const [gameState, setGameState] = useState({\n    gameActive: false,\n    players: [],\n    currentIt: null,\n    gameId: null,\n    tagHistory: [],\n  })\n  const [leaderboard, setLeaderboard] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  const { isAuthenticated } = useAuth()\n  const API_BASE_URL = \"http://localhost:5000/api\"\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchGameStatus()\n      fetchLeaderboard()\n    }\n  }, [isAuthenticated])\n\n  const fetchGameStatus = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/game/status`)\n      setGameState(response.data)\n    } catch (error) {\n      console.error(\"Failed to fetch game status:\", error)\n    }\n  }\n\n  const fetchLeaderboard = async (timeFilter = \"all\") => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/leaderboard?timeFilter=${timeFilter}`)\n      setLeaderboard(response.data.leaderboard)\n    } catch (error) {\n      console.error(\"Failed to fetch leaderboard:\", error)\n    }\n  }\n\n  const startGame = async () => {\n    setLoading(true)\n    try {\n      const response = await axios.post(`${API_BASE_URL}/game/start`)\n      await fetchGameStatus()\n      return { success: true }\n    } catch (error) {\n      return {\n        success: false,\n        error: error.response?.data?.error || \"Failed to start game\",\n      }\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const tagPlayer = async (targetUserId) => {\n    setLoading(true)\n    try {\n      const response = await axios.post(`${API_BASE_URL}/game/tag`, {\n        targetUserId,\n      })\n      await fetchGameStatus()\n      return { success: true, data: response.data }\n    } catch (error) {\n      return {\n        success: false,\n        error: error.response?.data?.error || \"Failed to tag player\",\n      }\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const value = {\n    gameState,\n    leaderboard,\n    loading,\n    startGame,\n    tagPlayer,\n    fetchGameStatus,\n    fetchLeaderboard,\n  }\n\n  return <GameContext.Provider value={value}>{children}</GameContext.Provider>\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}